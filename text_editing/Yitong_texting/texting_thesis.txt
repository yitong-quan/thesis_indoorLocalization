\chapter{Theoretical Background} 
\label{3}
In this chapter, the theoretical foundations relevant to this thesis will be explained, which are xxx,xxx,xxxx........



\section{Localization with Distances}
\label{3_1}
In Geometry, the position of a point can be determined by several methods, such as Trilateration and Triangulation. For location determination in this thesis, Trilateration is used, which can be described as followed:

In a two dimensional space, for instance, to determine the position of a point, at least 3 distances to 3 different fixed positions are required, except for the case that these 3 fixed positions lie on the same line.

When the exact distances from a mobile Tag to 3 anchor Nodes are known, the position of this mobile Tag can be determined by the intersection point of circles around the Nodes with the corresponding radius. As shown in Figure\ref{figure3_1}

\begin{figure}[ht]%
\centering
\includegraphics[width=0.6\textwidth]{figures/theoreticalBackground/3circles.PNG}%
\caption{localize the position of a mobile tag with distances to other 3 anchor nodes \cite{Patrick}.}%
\label{figure3_1}%
\end{figure}

When noises due to the inherent error of hardware are added to the distances from a mobile Tag to 3 anchor Nodes, the position of this mobile Tag lies within the intersection area of circles.


\section{Distance Measurement System with Ultra-wide Band Signal}
\label{3_2}


\subsection{Ultra-wide Band}
\label{3_2_1}
Ultra-wide Band(UWB) is a radio technology for communications, with the properties of  low energy consumption level for short-range, high-bandwidth, covering large portion of the radio spectrum\cite{UWB_propoties}.

XXXXXXXXXXXXXXX

more about UWB, check P16 in Patrick' thesis 
\cite{Patrick}.

XXXXXXXXX



\subsection{distance measurements}
\label{3_2_2}
One way to measure the distance \(d\) between the sender and the receiver, is to measure the signal running time \(\Delta t\) between the sending time of the sender and the receiving time of the receiver, based on the relation:

\begin{equation}
\label{eq:1}
d = \Delta t \cdot c
\end{equation}

where $c$ is the speed of the UWB signal, which is the speed of speed, equals to 299,792,458 \(m/s\), or approximately $3\times10^8$  \(m/s\).

In order to measure the above mentioned signal running time, the technique time of flight (ToF), sometimes called time of arrival (ToA), is used. ToF requires a precise time synchronization between each pair of sender and receiver, since the signal running time is calculated as the difference between timestamps from sender and receiver.

XXXXXXX

INSERT PIC (time of fly)

XXXXXXXXXX

To avoid the need of this time synchronization when calculating the signal running time, round-trip time (RTT), also called  round-trip delay time (RTD) can be used. The principle of RTT is shown in \autoref{fig:RTT}. In this procedure, two signals are sent sequentially. The first signal is sent from the transceiver 1 to the transceiver 2. Then the transceiver 2 reply to the transceiver 1 after some delay, due to internal processing in transceiver 2, or to make specified transmission time
predictable and aligned with the transmit timestamp. In \autoref{fig:RTT}, $t_0, t_3, t_2, t_1$ are the timestamps of sending and receiving signals in transceiver 1 and 2. After signal 1 is received, transceiver 2 will send $t_2, t_1$ to transceiver 1 through signal 2. Using $t_0, t_3$, together with $t_2, t_1$, transceiver 1 can now calculate the distance using \autoref{eq:RRT},

When $t_2$ is equal to $t_1$, then the above RTT is the procedure of ranging in Radar(radio detection and ranging) or Lidar(one of laser measurement system).

For simplicity reason, in the following part of this thesis, transceiver 1 is represented as mobile tag, and transceiver as anchor node.

\begin{equation}
\label{eq:RRT}
d = \frac{(t_0 - t_3) - (t_2 - t_1)}{2} \cdot c
\end{equation}


\begin{figure}[ht]%
\centering
\includegraphics[width=0.6\textwidth]{figures/theoreticalBackground/RRT}%
\caption{principle of RRT \cite{Fabian_ToF}.}%
\label{fig:RTT}%
\end{figure}

xxxxxxxxxxxxxxx

TODO; change in \autoref{fig:RTT} Transcceiver 1 & 2, 'zeit' to 'time'

xxxxxxxxxxxxxxx

xxx

Following are 3 of several implementations of RTT.

\begin{itemize}
	\item Single Sided Two Way Ranging (SSTWR). 
\end{itemize}

SSTWR is the basic implementation of RTT. The mobile tag send a message to the anchor node, which responds with another message back to mobile tag to finish the measuring process, as illustrated in \autoref{fig:SSTWR}. And each devices record their the transmission and reception
timestamps of the messages, $T_{round}$ is defined as the subtraction of reception timestamp and transmission timestamp in mobile tag, while $T_{reply}$ as the subtraction of transmission timestamp and transmission timestamp in anchor node. So the time of flight, $T_{prop}$ can be calculated by \autoref{eq:SSTWR}. 

\begin{figure}[ht]%
\centering
\includegraphics[width=0.6\textwidth]{figures/theoreticalBackground/SSTWR}%
\caption{illustration of SSTWR \cite{DW1000_USER}.}%
\label{fig:SSTWR}%
\end{figure}

\begin{equation}
\label{eq:SSTWR}
T_{prop}=\frac{T_{round}-T_{reply}}{2}
\end{equation}

Then the distance between mobile tag and anchor node can be calculated by \autoref{eq:T2d}. 


\begin{equation}
\label{eq:T2d}
d = T_{prop} \cdot c
\end{equation}


SSTWR has the advantage of time and energy saving, since only 2 messages are sent for one measuring. However it has the disadvantage of inaccuracy when $T_{reply}$ is big, since the $T_{round}$ and $T_{reply}$ are measured in two different devices with different local clock offset\cite{DW1000_USER}.

\begin{itemize}
	\item Double Sided Two Way Ranging (DSTWR). 
\end{itemize}

DSTWR is an extended version of SSTWR, combining two RRT time measurements, and has a smaller errer about the ToF result in comparison with SSTWR even for large $T_{reply}$\cite{DW1000_USER}.

\autoref{fig:DSTWR} illustrates the operation of DSTWR. The mobile tag first sends a message to the anchor node. Then the anchor node responds back to the mobile tag with another message, which serves as the end of the first RRT measurement and the begin of the second RRT measurement. Finally, the mobile tag sends back a third message to the anchor node and ends this ranging.

\begin{figure}[ht]%
\centering
\includegraphics[width=0.6\textwidth]{figures/theoreticalBackground/DSTWR}%
\caption{illustration of DSTWR \cite{DW1000_USER}.}%
\label{fig:DSTWR}%
\end{figure}

The time of flight, $T_{prop}$ can be calculated by \autoref{eq:DSTWR}\cite{DW1000_USER}.

\begin{equation}
\label{eq:DSTWR}
T_{prop}=\frac{T_{round1}\times T_{round2} -T_{reply1}\times T_{reply1}}{T_{round1}+T_{round2} +T_{reply1}+T_{reply1}}
\end{equation}

DSTWR has the advantage of small error in calculating ToF compare to SSTWR, and the disadvantage of requiring multiplication and division operations\cite{DW1000_USER}.

\begin{itemize}
	\item Symmetrical Double Sided Two Way Ranging (SDSTWR).
\end{itemize}

SDSTWR is a special case of DSTWR where $T_{reply1}$ and $T_{reply2}$ are required to be equal. Then the time of flight, $T_{prop}$ can be calculated by \autoref{eq:SDSTWR}\cite{DW1000_USER}.

\begin{equation}
\label{eq:SDSTWR}
T_{prop}=\frac{T_{round1} -T_{reply2} + T_{round2} - T_{reply1}}{4}
\end{equation}

SDSTWR has the advantage of low power consumption for micro-controller, since it requires only addition, subtraction and division by 4. However it has the disadvantage of long measuring time, since the $T_{reply1}$ and $T_{reply2}$ have to be the same, which means the greater value among these two has to be chosen.




\section{Kalman Filter}
\label{3_3}

The positions of a moving mobile tag can be localized using the measured distances to anchor nodes as illustrated in \autoref{3_1}.
But in the cases of, for example, some of the measurements are missing, or the measurements from different devices have different noise level, or the measurements are too noisy, the basic implementation of \autoref{3_1} would has difficulty to solve the localization problem. To tackle this difficulty, the extended Kalman filter is used in this thesis, which will be introduced in the \autoref{3_4}. In this section, the fundamental version of extended Kalman filter, i.e. the Kalman filter is introduced.

Kalman filter (KF) is one of the well-known algorithms for stochastic estimation from noisy measurements.\cite{intr_kf} It is named after Rudolf E. Kalman.  Since it was introduced, KF has been numerously applied in technology area, such as autonomous navigation of vehicles and signal processing and robotic motion planning.

KF substantially uses a series of observations over time to make better estimations about system states, compare to those base purely on one measurement. In a KF model, the current state ${\mathbf{x}}_{k}$ is developed from last state ${\mathbf{x}}_{k-1}$ with the state transition matrix ${\mathbf{A}}$, control-input vector ${\mathbf{u}_k}$, control-state-transition matrix ${\mathbf{B}}$ and process noise ${\mathbf{w}_k}$, as shown in \autoref{eq:KF_model1},

\begin{equation}
\label{eq:KF_model1}
\mathbf{x}_k = \mathbf{A} \mathbf{x}_{k-1} + \mathbf{B} \mathbf{u}_k + \mathbf{w}_{k}
\end{equation}

and the potential observation ${\mathbf{z}}_{k}$ of the current state ${\mathbf{x}}_{k}$ can be with be help of the observation-state-transition matrix ${\mathbf{H}}_{k}$ and     observation noise ${\mathbf{v}}_{k}$, as shown in \autoref{eq:KF_model2},

\begin{equation}
\label{eq:KF_model2}
\mathbf{z}_k = \mathbf{H}_k \mathbf{x}_k + \mathbf{v}_k
\end{equation}

The $\mathbf{w}_k$ and $\mathbf{v}_k$ in \autoref{eq:KF_model1} and \autoref{eq:KF_model2} are assumed to be Gaussian white noise with covariances $\mathbf{Q}_k$ and $\mathbf{R}_k$, i.e. $\mathbf{w}_k \sim \mathcal{N}\left(0, \mathbf{Q}_k\right)$ and $\mathbf{v}_k \sim \mathcal{N}\left(0, \mathbf{R}_k\right)$, which are independent distributed.

The KF is an implementation a recursive estimator with the type of predictor-corrector.\cite{intr_kf} It contains two steps in each recursive, i.e. prediction and correction. 
For simplicity, the following introduction about KF is about its discrete form, since this is the form used in this thesis. The prediction step projects the current estimates of state and error covariance over time to gain a priori estimation for the next time step. And the correction step uses the new obtained measurement as 'feedback' to correct the a priori estimation from last prediction step, and obtains a new improved estimation, known as a posteriori estimation.

The mathematical equations for prediction step is illustrated in \autoref{eq:kf_pre1} and \autoref{eq:kf_pre2},

\begin{equation}
\label{eq:kf_pre1}
\hat{\mathbf{x}}_{k}^{-} = \mathbf{A}\hat{\mathbf{x}}_{k-1} + \mathbf{B} \mathbf{u}_k 
\end{equation}

\begin{equation}
\label{eq:kf_pre2}
\mathbf{P}_{k}^{-} =  \mathbf{A} \mathbf{P}_{k-1} \mathbf{A}^\mathrm{T} + \mathbf{Q}_{k}
\end{equation}

where $\hat{\mathbf{x}}_{k}^{-}$ and $\mathbf{P}_{k}^{-}$ are the a priori estimation of state vector and error covariance at time step $k$, $\hat{\mathbf{x}}_{k-1}$ and $\mathbf{P}_{k-1}$ are the a posteriori estimation from last time step $k-1$, $\mathbf{A}$, $\mathbf{B}$, $\mathbf{u}_k$ and $\mathbf{Q}_{k}$ are the state-transition matrix, the control-input matrix, control-input vector and the covariance of the process noise at time step $k$.

The mathematical equations for correction step is illustrated in \autoref{eq:kf_cor1}, \autoref{eq:kf_cor2} and \autoref{eq:kf_cor3},

\begin{equation}
\label{eq:kf_cor1}
\mathbf{K}_{k} =  \mathbf{P}_k^{-}  \mathbf{H}^\mathrm{T} 
 (\mathbf{H} \mathbf{P}_k^{-} \mathbf{H}^\mathrm{T} + \mathbf{R})^{-1}
\end{equation}

\begin{equation}
\label{eq:kf_cor2}
\hat{\mathbf{x}}_{k} = \hat{\mathbf{x}}_{k}^{-} + \mathbf{K}_k(\mathbf{z}_{k} - \mathbf{H}\hat{\mathbf{x}}_{k}^{-})
\end{equation}

\begin{equation}
\label{eq:kf_cor3}
\mathbf{P}_{k}=  (\mathbf{I} - \mathbf{K}_{k} \mathbf{H}) \mathbf{P}_k^{-} 
\end{equation}

where $\hat{\mathbf{x}}_{k}$ and $\mathbf{P}_{k}$ are the a posteriori estimations of the state vector and error covariance at time step $k$, which will be severed as a priori estimations for the next recursive at time step $k+1$. $\hat{\mathbf{K}}_{k}$ is the optimal Kalman gain. $H$ is the observation matrix which maps the current state vector into the observed vector. 
$\mathbf{z}_{k}$ is the observation, i.e. the measurement vector. $R$ is the covariance of the observation noise. $I$ is a identity matrix.

Note that the state-transition matrix $\mathbf{A}$, the control-input matrix $\mathbf{B}$ and the observation matrix $\mathbf{H}$ are applied into the equations with the matrix multiply operator, which means that they can only perform well when the transitions between states, inputs and observations are linear. However for the non-linear cases, which is required for this thesis, other variant of KF can be used, such as extended Kalman filter.

\section{Extended Kalman Filter}
\label{3_4}

Extended Kalman Filter (EKF) is a non-linear version of KF, which means the state transition and observation-state-transition is not necessary to be linear function. In fact, the EKF uses differentiable functions, and   then linearizes via Taylor Expansion at the current estimate of the mean and covariance. 

In comparision to \autoref{eq:KF_model1} and \autoref{eq:KF_model2}, the relations between current state,  its previour state and its potential observation are sa shown in \autoref{eq:EKF_model1} and \autoref{eq:EKF_model2},

\begin{equation}
\label{eq:EKF_model1}
\mathbf{x}_{k} = f(\mathbf{x}_{k-1}, \mathbf{u}_{k}) + \mathbf{w}_{k}\\
\end{equation}

\begin{equation}
\label{eq:EKF_model2}
\mathbf{z}_{k} = h(\mathbf{x}_{k}) +\mathbf{v}_{k}
\end{equation}

where $f(\cdot)$ is the non-linear  differentiable function for state transition, and $h(\cdot)$  is the non-linear  differentiable function for observation-state transition. 


The equations for prediction step of EKF are listed in \autoref{eq:ekf_pre1} and \autoref{eq:ekf_pre2},

\begin{equation}
\label{eq:ekf_pre1}
\hat{\mathbf{x}}_{k}^{-} = f(\hat{\mathbf{x}}_{k-1}, \mathbf{u}_{k})  
\end{equation}

\begin{equation}
\label{eq:ekf_pre2}
\mathbf{P}_{k}^{-} =  \mathbf{F}_{k-1} \mathbf{P}_{k-1} \mathbf{F}_{k-1}^\mathrm{T} + \mathbf{Q}_{k}
\end{equation}

where $\mathbf{F}_{k-1}$ is the Jacobian matrix of $f(\cdot)$ with respect to $\hat{\mathbf{x}}_{k-1}$, as shown in \autoref{eq:JACO1}

\begin{equation}
\label{eq:ekf_cor1}
{{\mathbf{F}_{k-1}}} = \left . \frac{\partial f}{\partial \mathbf{x} } \right \vert _{\hat{\mathbf{x}}_{k-1}}
\end{equation}


The mathematical equations for correction step is illustrated in \autoref{eq:ekf_cor1}, \autoref{eq:ekf_cor2} and \autoref{eq:ekf_cor3},

\begin{equation}
\label{eq:JACO1}
\mathbf{K}_{k} =  \mathbf{P}_k^{-}  \mathbf{H}^\mathrm{T} 
 (\mathbf{H} \mathbf{P}_k^{-} \mathbf{H}^\mathrm{T} + \mathbf{R})^{-1}
\end{equation}

\begin{equation}
\label{eq:ekf_cor2}
\hat{\mathbf{x}}_{k} = \hat{\mathbf{x}}_{k}^{-} + \mathbf{K}_k(\mathbf{z}_{k} - \mathbf{H}\hat{\mathbf{x}}_{k}^{-})
\end{equation}

\begin{equation}
\label{eq:ekf_cor3}
\mathbf{P}_{k}=  (\mathbf{I} - \mathbf{K}_{k} \mathbf{H}) \mathbf{P}_k^{-} 
\end{equation}

where $\mathbf{H}$ is the Jacobian matrix of $H(\cdot)$ with respect to $\hat{\mathbf{x}}_{k}^{-}$, as shown in \autoref{eq:JACO2}

\begin{equation}
\label{eq:JACO2}
 {{\mathbf{H}}} = \left . \frac{\partial h}{\partial \mathbf{x} } \right \vert _{\hat{\mathbf{x}}_{k}^{-}}
\end{equation}


\section{Model Building with EKF}
\label{3_5}


One of the aims of this thesis is to localize the positions of the mobile tag in two dimensional space, 
the state vector $\mathbf{x}$ of the target, i.e. mobile tag contains its positions ${p}_{x}$, ${p}_{y}$ 
and the velocities $\dot{p}_{x}$, $\dot{p}_{y}$, in which the subscript $x$ and $y$ indicate their components
in  $x$- and $y$-axes
of a Cartesian coordinate system. 

\begin{equation}
\label{eq:state vector}
 {{\mathbf{x}}} = [{p}_{x}, {p}_{y}, \dot{p}_{x}, \dot{p}_{y}]^{T}
\end{equation}

\noindent \textit{Transition Modelling}

For the transition model, numerous motion models have been proposed, such as constant velocity
model \cite{constant_velocity} and random walk \cite{random_walk}, the latter will be used in this thesis. In a random walk model, the velocity of the 
mobile tag in a time interval between two
estimates are assumed to be constant, and after each estimate the velocity will be changed by adding a random
acceleration value. So the state  transition model can be illustrated in a mathematical way as \autoref{eq:ekf_pre1_concret},

\begin{equation}
\label{eq:ekf_pre1_concret}
\mathbf{x}_{k} = 
\begin{bmatrix}
1 & 0 & dt & 0\\ 
0 & 1 & 0 & dt\\ 
0 & 0 & 1 & 0\\ 
0 & 0 & 0 & 1
\end{bmatrix}
*
\mathbf{x}_{k-1}
+
\begin{bmatrix}
\frac{1}{2}\cdot {dt}^2 & 0\\ 
0 & \frac{1}{2}\cdot dt^2\\ 
dt & 0\\ 
0 & dt
\end{bmatrix}
*
\begin{bmatrix}
\ddot{p}_{x}\\ 
\ddot{p}_{y}
\end{bmatrix}
\end{equation}

where $\ddot{p}_{x}$ and $\ddot{p}_{y}$ are indicating the  accelerations   of the mobile tag in the $x-$ and $y-$axes, which will be generated as random value to simulate the random walking model.


%%%%\begin{equation}
%%%\label{eq:ekf_pre1_concret1}
%%\mathbf{a} = [\ddot{p}_{x}, \ddot{p}_{y}]^{T}
%\end{equation}
 
 The \autoref{eq:ekf_pre1_concret} is the concrete form of
 \autoref{eq:EKF_model1}, 
where $\mathbf{u}_{k}$ is $\mathbf{0}$, and the $f(\cdot)$ in \autoref{eq:EKF_model1} is a linear function as the same as $\mathbf{A}$ in \autoref{eq:KF_model1}, 

\begin{equation}
\label{eq:ekf_pre1_concret_A}
f(\cdot) = \mathbf{A} = 
\begin{bmatrix}
1 & 0 & dt & 0\\ 
0 & 1 & 0 & dt\\ 
0 & 0 & 1 & 0\\ 
0 & 0 & 0 & 1
\end{bmatrix}
\end{equation}

and the process noise $\mathbf{w}_k$ is simulated as the term cased by varying accelerations,

\begin{equation}
\label{eq:ekf_pre1_concret_w}
\mathbf{w}_k = 
\begin{bmatrix}
\frac{1}{2}\cdot {dt}^2 & 0\\ 
0 & \frac{1}{2}\cdot dt^2\\ 
dt & 0\\ 
0 & dt
\end{bmatrix}
*
\begin{bmatrix}
\ddot{p}_{x}\\ 
\ddot{p}_{y}
\end{bmatrix}
\end{equation}

which makes the $\mathbf{F}_{k-1}$  and $\mathbf{Q}_{k}$ in \autoref{eq:ekf_pre1} and \autoref{eq:ekf_pre2} into concrete form as followed,

\begin{equation}
\label{eq:ekf_pre1_concret_F}
{{\mathbf{F}_{k-1}}} = \left . \frac{\partial f}{\partial \mathbf{x} } \right \vert _{\hat{\mathbf{x}}_{k-1}} = 
\begin{bmatrix}
1 & 0 & dt & 0\\ 
0 & 1 & 0 & dt\\ 
0 & 0 & 1 & 0\\ 
0 & 0 & 0 & 1
\end{bmatrix}
\end{equation}

\begin{equation}
\label{eq:ekf_pre1_concret_Q}
\mathbf{Q}_k = \mathbf{w}_k*{\mathbf{w}_k}^T  = 
\begin{bmatrix}
\frac{1}{2}\cdot {dt}^2 & 0\\ 
0 & \frac{1}{2}\cdot dt^2\\ 
dt & 0\\ 
0 & dt
\end{bmatrix}
*
\begin{bmatrix}
\ddot{p}_{x}\\ 
\ddot{p}_{y}
\end{bmatrix}
*
{
\begin{bmatrix}
\ddot{p}_{x}\\ 
\ddot{p}_{y}
\end{bmatrix}
}^T
*
{
\begin{bmatrix}
\frac{1}{2}\cdot {dt}^2 & 0\\ 
0 & \frac{1}{2}\cdot dt^2\\ 
dt & 0\\ 
0 & dt
\end{bmatrix}
}^T
\end{equation}

\noindent \textit{Observation Modelling}

The observation model maps the observation space into 
the state space, interpreting the relation between the 
state vector $\mathbf{x}$ and its observation $\mathbf{z}$.
Assume the a priori estimate of the state vector $\hat{\mathbf{x}}_{k}^{-}$ 
at current$\hat{\mathbf{x}}_{k}^{-}$
time step is $[\hat{p}_{x}, \hat{p}_{y}, \hat\dot{p}_{x}, \hat\dot{p}_{y}]^{T}$
and one of the anchor nodes $i$ is located in known position
$[{n}_{ix}, {n}_{iy}]$. According to two dimensional geometry, as illustrated in
\autoref{fig:obs_dist},
the observation $\mathbf{z}_{i}$ of this anchor node $i$, i.e. the distance betwwen the mobile tag 
and this anchor node at this time step can be calculated as \autoref{eq: obs_dist},

\begin{equation}
9999999999999
\end{equation}

{fig:obs_dist} 1111111111111111111111111111111111111111111

\autoref{eq: obs_dist} is the concrete form of \autoref{eq: EKF_model2}}, 
only without the noise term $\mathbf{v}_k$. Note that \autoref{eq: obs_dist} 
is a non-linear funtion, it is impossible of be processed in a KF. By ussing
 EKF, as in \autoref{eq:JACO2}, the observation-state-transition matrix $\mathbf{H}$ can be obtained by
 applying Jacobian, as illustrated in  \autoref{eq:JACO_concrete}

\begin{equation}
9999999999999
\end{equation}

For the covariance of observation noise $\mathbf{R}_k$,
this thesis assumes the observations to each anchor nodes are independent,
so the $\mathbf{R}_k$ can be assumed as a diagonal matrix, with 
the variance $\mathbf{\sigma}_{ni}$ of each anchor node measurements in the main diagonal entries,

\begin{equation}
\label{eq:ekf_concret_Rk}
9999999999999
\end{equation}

the way how $\mathbf{\sigma}_{ni}$ is determined will be described in 
\autoref{5.1}}


1

\section{Self-Calibration Localization}
\label{3_5}

\section{Data Mitigation}
\label{3_6}

---------------------------------
-----------------------------------
11111111111111111111111111111111111111111
111111111111111111111111111111111111111
-------------------------------------

\chapter{Hardware Improvement}
\label{4}
In this chapter the improvement of the hardware for the UWB communication system is presented.
Firstly, the principle procedure of communication betwwen hardwares
will be explained in \autoref{4_1}. Then, the improvements
have been done in this thesis will be explained in \autoref{4_2}.
Finally, the improvements result will be shown in \autoref{4_3}.



\section{Communication Outlook}
\label{4_1}
The system contains one base station, one mobile tag and several anchor nodes.
The mible tag is the target of the localization, whose 
position is needed to be determined or trajectory 
is needed to be recover.
The anchor nodes are mounted in the enviroment facilities, with fixed positions.
The base station is connected to a PC to receive commands and transer data.

For the considering of energy saving, the initial state of 
the mobile tag and the anchor nodes are in the sleeping mode,
only when they receive wake_up message sent by the base station,
 will they be in active mode and start to measure the
 distances between the mobile tag and anchor nodes. 
 The distances infomation will be then 
 sent back to the base station for further processing.
 After these procedure, the mobile tag and anchor nodes
 will be back in sleep mode, untile the next wake_up
 message comes.

 \autoref{4_1} illustrates the communication procedure, 
 
 Step 1, the base station sends the wake-up message to wake up the mobile tag and anchor nodes.
 
 Step 2, knowing the mobile tag and anchor nodes are
 awaked, the base station sends to the 
 mobile tag a ID-message, which contains the IDs of the anchor
 nodes that are needed to be connected with by the mobile tag.
 
  Step 3, the tag sends
 a blink-message to one specified anchor node, letting this 
 node goes in to active mode, and the rest waked up nodes stay in the stand by mode. 
 
Step 4, this in active mode anchor node sends a poll-message to the mobile tag, containing the local sending timestamp,
 
Step 5, the mobile tag receives this poll-message, then sends out a respond-message. The poll-message receiving timestamp and respond-message seding timestamp are recorded in the tag,
 
Step 6, the anchor node receives this respond-message, then sends out a final-message, containing the respond-message receiving timestamp and final-message seding timestamp. Afterwards, the anchor node goes directly into sleep mode.
 
Step 7, the mobile tag receives this final-message, records the local receiving timestamp. Now the mobile tag has stored the timestamps of sending poll-message, receiving respond-message, sending final-message from the anchor node, and receiving poll-message, sending respond-message, receiving final-message from itself. With all this timestaps, the tag uses the Double Sided Two Way Ranging as mentioned in \autoref{{3_2_2}}, 
to calculate its distance to this anchor node. And this distance will be store as 'distance1' in its local menmery.

Aferwards, the mobile tag will sends
 a blink-message to the second specified anchor node, and repeat the step 3 to 7 and stores 'distance2' and 'distance3' and so on, until all the nodes with the ID listed in ID-message from step 2 has been communicated by the mobile tag.

Step 8, the mobile tag sends distance-message back to the base station, letting the base station to do the further data processing, for example distances calibration.

The aboved mentioned eight steps for one set distances measuremnt. Ideally, after each set measuremnt, the distances from mobile tag to all the anchor nodes are obtained. But in reality, due to signal interfering and hardware errors, some distances will be missing.  




\clearpage
\section{Improvements}
\label{4_2}


\clearpage
\section{Results}
\label{4_3}

After the what are discussded in last subsection have been done, the system's proformance is much better than before. In this subsection, the maximal sampling rates and the occurent probabilities of measuremnt data misising before and after improvementswill be discussed. From the experiments done with system before and after improvement, 4 sets of data are selected randaomly for this comparision. Each set of data contains the distances from the mobile tag to 5 anchor nodes, and the time stamps when these measurements are done. The data has the following structure,



To obtain the maximal sampling rate, the mobile tag needs to be operate incessantly, whihc means tag needs to be waked up immediatly after going to sleep. To ensure this, during the experiment, the base station is sending out wake-up messages and the ID-message at relatively high rate, 10Hz, which is the highest value can be achieved by the software 'Hterm'. 

shows the normalized histogram of time interval of the time stamps of measurements in 4 independent experiments.

Although the shortest time interval value obtained is 1.2010 and 0.4690 second respectively by the system before and after improved, these value are rarely occured. So the average values, namely 2.8276 and 0.6753 second are better choice for calculating the maximal 
sampling rate. Before system being improved, maximal 
sampling rate before system has been improved $f_{before}$ is calculated as,

\begin{equation}
\label{eq:f_before}
f_{before} = \frac{1}{2.8276 second} = 0.3537 Hz
\end{equation}

and maximal 
sampling rate after system has been improved $f_{after}$ is calculated as,

\begin{equation}
\label{eq:f_after}
f_{after} = \frac{1}{0.6753 second} = 1.4808 Hz
\end{equation}

Based on the value from \autoref{eq:f_before} and 
\autoref{eq:f_after}, the maximal sampling rate has been
improved from $0.3537 Hz$ to $1.4808 Hz$, inreased by 4 times.


Due to interfering or timing issue as described in \autoref{4_2}, sometimes measurement data will be missing. And what is obtained in one distance measurement set contains not the distances to all the anchor nodes, an example of what a data set looks like in the reality experiment is illustrated in \autoref{tab:data_msiing}, where the first column is the time stamps in second counted from the beginning of the experiment, column 2 to 6 are the distance value to 5 anchor nodes in millimeter. The $\textbf{\textit{NaN}}$ in the table \autoref{tab:data_msiing} indicating the case where the distance measurement to a certain anchor node is not successfully obtained.



\autoref{fig:num_meas_before} shows the normalized histogram of time interval of the time stamps of measurements in 4 independent experiments.


The \textit{maximal sampling rate} indicates how fast the system can sample, i.e. how fast the system can obtain the distances between the mobile tag and the anchor nodes. It is obviors that the greater the \textit{maximal sampling rate} is, the better the system can  to receive the trajectory of the target or to localize the target.


The \textit{occurrence probabilities of number of measurements obtained} is defined as the probabilities when distances infomation from mobile tag to a certain number of nodes can be required within one experiment. In ideal cases, the distances to all anchor nodes can be obtained at each sampling time, meaning the occurrence probability of $N$ measurements obtained is $1$, and  the occurrence probabilities of $N-1$, $N-2$... $N-N$ measurements obtained is $0$, where $N$ is the number of the total anchor nodes going to communicate with the mobile tag. But in reality, distance information to several nodes can not be obtained, due to reasons as explained in \autoref{4_2}. When the occurrence probabilities of number of higher measurements obtained is big, we say the system performs well. The system performs bad when the  occurrence probabilities of number of lower measurements obtained is big. For details please refer to \autoref{4_3_2}  

in detail please refer to \autoref{4_3_2}.

0- 1 4 6 8 12  13 
1-2 3 5 7  15
2-9 14
3-10
4-11  
5-
 
In the 15 samples from \autoref{{tab:data_msiing}}, samples $1$, $4$, $6$, $8$, $12$, $13$ contain  non $NaN$, that is to said these samples contains 5 measurements. Samples $2$, $3$, $5$, $7$, $15$,  contain  1 $NaN$, so these samples contains 4 measurements.  Samples $9$ and  $14$ contain 2 $NaN$, so these samples contains 3 measurements. Sample $10$ contains 2 measurements. Sample $11$ contains 1 measurement. So the occurrence probabilities of $5$, $4$, $3$, $2$, $1$, $0$ measurements obtained can be calculated as following,

Using the aboved mentioned method for calculating occurrence probabilities, we can obtain the normalized histograms of obtained measurements number as shown in \autoref{fig:numMeasBefore} and \autoref{fig:numMeasAfter}, 

\autoref{fig:numMeasBefore} is plotted based on the same 4 experiments data as the ones used in \autoref{4_3_1} obtained by system before being improved, while \autoref{fig:numMeasAfter} is obtained by system after being improved. It is easy to recognized that in \autoref{fig:numMeasAfter}, the occurrence probabilities for 3, 4 and 5 measurements are higher then the ones in \autoref{fig:numMeasBefore} , while occurrence probabilities for 0, 1 and 2 are lower.

For getting a better system performance, modifications of the C code have been done, such as the timeing issue, sleeping mode option and so on. 
Limit to the length of these thesis, not all the modifications will be mentioned here.


-----------------------------------------------------------
Motivation:

The aim of this thesis is to reliease accurate localization of a mobile tag base on its distances to several anchor nodes, using the Ultra-wide band radio technology. The mobile tag and the anchor nodes are the same type of transceivers with different functionalities.


-----------------------------------------------------------

The communication procedure between tag and nodes is as followed:
 At the beginning, the tag sends a blink-message at its state \textit{STATE_SEND_BLINK}. 
 
 The node waits for this message after its state \textit{STATE_WAIT_BLINK_RECEIVE}, and check the content of the message once it receives one. If the message is the contains the right information, in this case, the ID of this corresponding node, this nodes will goes into a new state  \textit{STATE_POLL_TRANSMIT} and send out a poll-message. Here starts the DSTWR.
 
 The tag checks for the received poll-message, and send out the respond-message.
 
 The node checks for the received respond-message, and send out the final-message.
 
 The tag receive the final-message, calculates the distance, and finish the DSTWR. As mentioned in \autoref{4_1}.
 
 Here some real-time-counters (RTC) are set to prevent the tag and node from waiting in one state when the message was not received or when the message received could not pass the checking step. 

 The count-down looper between for entering state \textit{STATE_POLL_TRANSMIT} in anchor node is vital
 
 The real time counter in the tag is also important, a proper value should be set. When the value is to small, the tag could not receive the poll-message from the node and ea. 
 
--------------------------------------------------------- 
 Self-Calibration Localization
 
The aim of self-calibration localization is to localize the anchor nodes andthe mobile tag based on distance data and part but not all the positions of anchor nodes. With this method, not all the positions of the anchor nodes are required for localization. This is suitable for the case, where not all the positions of the anchor nodes can be easily determined.

The principle of self-calibration localization works as followed. Firstly, based on purely distance data, localize the anchor nodes and mobile tag in a floating coordinate frame. Afterwards,  transform the floating coordinate  frame into the global coordinate, with the help of the positions of some anchor nodes in the global coordinate.

We now consider the task of localization in two dimensional Euclidean space. It is assumed that, there is no mirror symmetry between the positions of nodes. The network consists of $n$ anchor nodes and the trajectory of the mobile tag consist of $m$ discrete positions. This leads to $2n+2m$ variables in two dimensional Euclidean space. Assuming all the distances measurements between each $m$ positions of tag and $n$ nodes have been obtained, we have $n \cdot m$ known value. The degree of freedom ${M}$ of this localization problem can be calculated as: 


After distances measurements are obtained, the Levenberg–Marquardt algorithm are chosen to solve the non-linear least square problem \autoref{eq:self-calib-nonlin} with an given initia guess. This solves the positions of the $n$ nodes and $m$ tag' trajectory point in a floating coordinate frame. To trasform this floating  coordinate frame into the global coordinate frame, the true positions of 3 nodes in the global coordinate frame are required (4 nodes' positions are in a 3 dimensional space). The trasformation matrix can be determined with optimazation methods, again Levenberg–Marquardt algorithm are chosen.

It should be noticed that, the Levenberg–Marquardt algorithm can not ensure the global minimum can be found. In order to improve the chance to find the global minimum, this thesis proposes first to group data then optimize.


The simulation is done with software MATLAB.

In this experiment, a trajectory of a human is generated with the random walk model. In this model, the initial state $\mathbf{x}_{0}$ is as \autoref{eq:initial_state_traj}. Since the average  walking speed of human is 5 kilometres per hour\cite{walking_speed}, i.e. 1.4 meters per second, we chose this value for the initial velocity $\dot{p}$. With the relation as shown in \autoref{eq:rel_v}, one option for 
$\mathbf{\dot{p}_{x}$ and $\mathbf{\dot{p}_{y}$ could be chosen as $1$ and $1$
\begin{equation}
\label{eq:rel_v}
 {\mathbf{\dot{p}^2} = {\mathbf{\dot{p}_{x}^2} +{\mathbf{\dot{p}_{y}^2}
\end{equation}

\begin{equation}
\label{eq:initial_state_traj}
 {\mathbf{x}_{0}} = \begin{bmatrix}
{p}_{x}\\ 
{p}_{y}\\ 
\dot{p}_{x}\\ 
\dot{p}_{y}
\end{bmatrix}
=
\begin{bmatrix}
0\\ 
0\\ 
1\\ 
1
\end{bmatrix}
\end{equation}.

And the accelerations $\ddot{p}_{x}$, $\ddot{p}_{y}$ are randaomly changing value. The time intervals between each two consecutive points are always 0.5 second, which are close to the sampling rate of the UWB measure system in a real experiment. The genertated trajectory is shown in \autoref{fig:genertated_trajectory}.

Four anchor nodes are located around the trajectory, as shown as red diamens in \autoref{fig:genertated_trajectory}. When choosing the locations of the nodes, it should be noticed that the nodes should be away from most of the tag's points for at least $2$ meters. Besides, it is also good when at least $3$ nodes are $2$ meters away from every tag's point. This is because of the 2-meters-error-range problem as described in (TODO, chapter calibration)\autoref{XXX}.

Based on the known locations of the nodes and tag's trajectory, the exact distances between every node $i$ and every tag's points $j$ can be determined. These exact distances corrupted with noises $r_i$ leads to the simulated measurements data $d_{ij}$. The noise $r_i$ can be determined according to \autoref{XxX}(TODO, calibration, R matrix).

(TODO: Q & R factor explain)

With the simulated measurements data and the positions of the anchor nodes, now we can estimate the trajectory of the mobile tag. \autoref{fig:EKF_simu_best} and \autoref{fig:EKF_simu_worst} shows the best and the worst estimates from the EKF. The performance of the EKF is judged by the mismatch
of the estimate positions to the true one. The mismatch is calculated as \autoref{eq:RMSE} with the form of Root-Mean-Sqaure error, also called RMSE.

Where $n$ is the total number of points in the trajectory, $\mathbf{\hat p_i}$ is the estimate locations of these points from the output from EKF, $\mathbf{p_i}$ the true locations of these points and $\left \| \cdot \right \|$ is the Euclidean distance.

(TODO: Q & R factor table RMSE)

Aims

The aim of this thesis is to realize accurance localization using the UWB ranging system built by \cite{Patrick}. To realize this aim, two main tasks are done, which are improvement of the ranging system, and implementations of  algorithms for localization.

Structure of This Work

This master thesis is present in the following structure.
\autoref{3} explains the theoretical background knowledge, which includes trilateration, Ultra-wide Band (UWB), different type of range, extended Kalman filter (EKF) and self-calibration localization.
\autoref{2} introduces some of the relative works.
\autoref{4} explains the improvements for the ranging system have been made in this thesis based on the work of \cite{Patrick}, and evaluates the performance of the new system from the perspective of maximal sampling rate and data obtain rate.
\autoref{5} explains the calibrations for the ranging system.
\autoref{6} and \autoref{7} show the experiment results based on simulations and real-world experiments. This results include the performance of the implemented EKF, self-calibration localization from the perspective of the accurance of the localization.

In this implementation of EKF, one observation contains only one valid distance measurement, instead of a whole measurements set. In other words, within one set of $5$ measurements, there are $5-NUM_{inv}$ EKF update, where $NUM_{inv}$ is the number of invalid distance data in this set.
The time stamps of each this observation can not be exactly determined in the scope of this thesis. As described in\autoref{4_1}, for each set of measurements, all the $5$ distances value are sent back to the base station in one package, so the station can only generate one time stamp for all this $5$ measurements. Based on the current-time plot of one sampling cycle of the tag as shown in \autoref{fig:tag5node_after}, we assume that the distance to the $5th$ node is  generated at the time stamp of the end of the sampling cycle, which is roughly the receiving time stamp $t_{package}$ of the whole distances package. And the distance to the $4th$ node is  generated $25 ms% ealier before $t_{package}$. The distance to the $3th$ $2nd$ $1st$ nodes are  generated at time stameps $t_{package}-50ms$, $t_{package}-75ms$, $t_{package}-100ms$.

(TODO, add algorithm of EKF2)

The RMSE calulated by \autoref{eq:RMSE} is $XX$.
(TODO, compare with the value frome EKF1, if the difference not big, can be explained by the velocities not high)
(TODO, is the Q- R-factors the same as EKF1?)
(TODO, is the R-factors smaller?, can be explained as followed: due to the fact that only one distance to one of the $5$ nodes is obtained fo the correction update, this distance value should be treated as a very importance infomation. For this reason, the noise variance for it can be adjust to a relatively smaller value.)
(TODO: histogram of the mismatch, determine whether Gaussian or not)
(TODO: plot of time diff, determine sampling rate)
(TODO: when possible, do comparision with ASSIST)

In the first implementation of EKF in \autoref{6_9_1}, if one of the distance  value contains high noise level, the EKF can still perform  well, as soon as the noise level of the other disatnce value in the same set is low. This is another story in the second  implementation, since each observation contains only one distance, high noise level would lead to poor estimate of this update. In this case, it is important to find out the measurements with great noise, i.e. outliers. 
This thesis proposes a methed to find out these outliers, which is described in the \autoref{6_11}


----------------------------------------------------------------------
measurement analysis

The distance measurement system performs linearly when the distacne is longer  than two meters \cite{Patrick}. When the diatance between the tag and the node is longer than two meters, the linear relation betwen the distance measurement value $d_{measured}$ and the true distance $d_{true}$ can be expressed as \autoref{eq:dist_linear},

\begin{equation}
\label{eq:dist_linear}
d_{measured} = a_1 \cdot d_{true} + a_2;,
\end{equation}

where $a_1$ and $a_2$ are the system parameters to 
be determined. These two parameters  depend greatly on the system, i.e. the tag and the node.
Since there is only one tag in use, these parameters only depend on the node. It is  assumed, the influence of other factors to these two parameters are neglactable, such as temperature and humminity. When the disatnce is shorter than two meters, the relation between $d_{measured}$ and $d_{true}$ is polynomial\cite{Patrick}.

In this chapter explains and analysis the system calibration, i.e. determines the $a_1$ and $a_2$  of each node.

section1 +++++++++++++++++++

The data for system calibration is collected in the grass field far away from buildings. Such experiment enviroment can reduce the chance of occurrence of mulipath-propagation, caused by the reflections from walls and metals. Meanwhile, to reduce the reflections from the ground, the tag and the nodes are place on the top of wooden sticks 1.2 meters above the ground. \autoref{fig:meas_calibration} shows this setup.

The value for $d_{true}$ have been chosen as 3, 4, 5, 6, 8 meters. For each node with each these distance value, (TODO, number of measurements) measurements have been obtained. Due to the existence of the outliers among the measurement data, (TODO, trimmean and mad) are use to calculate the mean value  and variances of the measurements. (TODO, explain trimmean and mad). 
The mean value  and variances of the measurements obtained are listed as \autoref{tab:mean_var_calib}.
The normalized histograms of the measurements are shown as \autoref{fig:mean_calib}. 

(TODO: explain the histograms)Now we discuss whether these measurements value follow gaussian distribution, heavy tail at the end(can be explained as the reflections), heavy tail at the beginning(can not be explained).  (TODO: z-test results)

(TODO: add table {tab:mean_var_calib})

(TODO: add figures {fig:mean_calib})




